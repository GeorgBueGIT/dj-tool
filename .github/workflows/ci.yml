name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # - name: Setup Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Build Docker Images
      #   run: |
      #     docker-compose -f docker-compose.yaml build
      #     IMAGE_IDS=$(docker images --filter "label=com.docker.compose.project=<project_name>" --filter "since=24 hours ago" --quiet)
      #     echo "::set-env name=IMAGE_IDS::$IMAGE_IDS"

      # - name: Tag and Push Docker Images
      #   run: |
      #     REGISTRY_LOWER=$(echo "${REGISTRY}/${IMAGE_NAME}" | tr '[:upper:]' '[:lower:]')
      #     for IMAGE_ID in $IMAGE_IDS; do
      #       docker tag $IMAGE_ID ${REGISTRY_LOWER}:latest
      #       docker push ${REGISTRY_LOWER}:latest
      #     done

      - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}