name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./frontend/Dockerfile
            image: ghcr.io/georgbuegit/frontend-image
            context: ./frontend
            is_frontend: true
          - dockerfile: ./backend/Dockerfile
            image: ghcr.io/georgbuegit/backend-image
            context: ./backend
            is_frontend: false

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ matrix.image }}

      - name: Build and push Docker image
        id: docker-build-push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ${{ matrix.context }} 
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  test-frontend:
    needs: build-and-push-image
    if: ${{ needs.build-and-push-image.outputs['docker-build-push.is_frontend'] == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies and run tests (Frontend)
        working-directory: ./frontend
        run: |
          npm install
          npm run test:ci

  test-backend:
    needs: build-and-push-image
    if: ${{ needs.build-and-push-image.outputs['docker-build-push.is_frontend'] == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies and run tests (Backend)
        working-directory: ./backend
        run: |
          npm install
          npm run test:ci
